services:
  db:
    restart: always
    image: postgres:16-alpine
    container_name: db
    shm_size: 256mb
    networks:
      - internal_network
    volumes:
      - /home/ubuntu/librarease/postgres16:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=YOUR_DB_PASSWORD_HERE
      - POSTGRES_DB=librarease
    logging:
      options:
        max-size: 50m
    

  api-service:
    restart: always
    image: 211125740494.dkr.ecr.ap-southeast-1.amazonaws.com/libraraease:backend
    container_name: api-service
    networks:
      - internal_network
    ports:
      - 8080:8080
    volumes:
      - /home/ubuntu/deploy/librarease-dev-firebase-adminsdk-e8lye-00bfca0d58.json:/app/librarease-dev-firebase-adminsdk-e8lye-00bfca0d58.json
    environment:
      - APP_ENV=production
      - PORT=8080
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=librarease
      - DB_USER=postgres
      - DB_PASSWORD=YOUR_DB_PASSWORD_HERE
      - DB_SCHEMA=public
    depends_on: 
      - db

  frontend-service:
    restart: always
    image: 211125740494.dkr.ecr.ap-southeast-1.amazonaws.com/libraraease:frontend
    container_name: frontend-service
    networks:
      - internal_network
    ports:
      - 80:3000
    environment:
      - APP_ENV=production
      - PORT=80
    depends_on: 
      - api-service
      

networks:
  internal_network:

# services:
#   app:
#     build:
#       context: .
#       dockerfile: Dockerfile
#       target: prod
#     restart: unless-stopped
#     ports:
#       - ${PORT}:${PORT}
#     environment:
#       APP_ENV: ${APP_ENV}
#       PORT: ${PORT}
#       DB_HOST: ${DB_HOST}
#       DB_PORT: ${DB_PORT}
#       DB_DATABASE: ${DB_DATABASE}
#       DB_USER: ${DB_USER}
#       DB_PASSWORD: ${DB_PASSWORD}
#       DB_SCHEMA: ${DB_SCHEMA}
#     depends_on:
#       psql_le:
#         condition: service_healthy
#     networks:
#       - librarease
#   psql_le:
#     image: postgres:latest
#     restart: unless-stopped
#     environment:
#       POSTGRES_DB: ${DB_DATABASE}
#       POSTGRES_USER: ${DB_USERNAME}
#       POSTGRES_PASSWORD: ${DB_PASSWORD}
#     ports:
#       - "${DB_PORT}:5432"
#     volumes:
#       - psql_volume_bp:/var/lib/postgresql/data
#     healthcheck:
#       test: ["CMD-SHELL", "sh -c 'pg_isready -U ${DB_USER} -d ${DB_DATABASE}'"]
#       interval: 5s
#       timeout: 5s
#       retries: 3
#       start_period: 15s
#     networks:
#       - librarease

# volumes:
#   psql_volume_bp:
# networks:
#   librarease: